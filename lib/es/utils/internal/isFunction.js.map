{"version":3,"file":"isFunction.js","sources":["../../../../src/utils/internal/isFunction.js"],"sourcesContent":["import isNonNullable from \"./isNonNullable.js\";\r\n\r\n/**\r\n * Check if a value is a function.\r\n *\r\n * @param {any} value - The value to check.\r\n * @returns {boolean} `true` if the value is a function, otherwise `false`.\r\n */\r\nconst isFunction = value => isNonNullable( value ) && ( Object.prototype.toString.call( value ) === \"[object Function]\" || typeof value === \"function\" || value instanceof Function );\r\n\r\nexport default isFunction;"],"names":["isFunction","value","isNonNullable","Object","prototype","toString","call","Function"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,UAAU,GAAGC,KAAK,IAAIC,aAAa,CAAED,KAAM,CAAC,KAAME,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAAEL,KAAM,CAAC,KAAK,mBAAmB,IAAI,OAAOA,KAAK,KAAK,UAAU,IAAIA,KAAK,YAAYM,QAAQ;;;;"}