{"version":3,"file":"SourceMap.cjs","sources":["../../../src/utils/SourceMap.js"],"sourcesContent":["import mergeSourceMap from \"merge-source-map\";\r\n\r\nimport isSourceMapLike from \"./isSourceMapLike.js\";\r\nimport isString from \"./internal/isString.js\";\r\nimport isArray from \"./internal/isArray.js\";\r\n\r\n/**\r\n * Represents a version 3 source map.\r\n *\r\n * @param {SourceMapLike} sourceMap - A source map like object containing the properties to initialize the instance with.\r\n * @see https://tc39.es/source-map/\r\n */\r\nexport default class SourceMap {\r\n    //region static\r\n\r\n    /**\r\n     * Merge two source maps together returning the combined result.\r\n     *\r\n     * @param {SourceMapLike|undefined} oldMap - The old source map.\r\n     * @param {SourceMapLike|undefined} newMap - The new source map.\r\n     * @returns {SourceMap|undefined} - The combined source map if the merge was successful, otherwise `undefined`.\r\n     */\r\n    static merge( oldMap, newMap ) {\r\n        return this.from( mergeSourceMap( oldMap, newMap ) );\r\n    }\r\n\r\n    /**\r\n     * Get a SourceMap from a source map like object.\r\n     *\r\n     * If the value is already a SourceMap instance, it is simply returned.\r\n     *\r\n     * @param {SourceMapLike|undefined} sourceMap - The value to use.\r\n     * @return {SourceMap|undefined} - A source map if successful, otherwise `undefined`.\r\n     */\r\n    static from( sourceMap ) {\r\n        if ( isSourceMapLike( sourceMap ) ) {\r\n            if ( sourceMap instanceof SourceMap ) {\r\n                return sourceMap;\r\n            }\r\n            return new SourceMap( sourceMap );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Match all multiline sourceMappingUrl comments.\r\n     * @type {RegExp}\r\n     */\r\n    static COMMENT_MULTILINE = /(\\r?\\n)?\\/\\*# sourceMappingURL=.*?\\s\\*\\//g;\r\n\r\n    /**\r\n     * Match all single line sourceMappingUrl comments.\r\n     * @type {RegExp}\r\n     */\r\n    static COMMENT_SINGLE = /(\\r?\\n)?\\/\\/# sourceMappingURL=.*?$/g;\r\n\r\n    /**\r\n     * Set the #sourceMappingUrl comment for the source using the specified url.\r\n     *\r\n     * @param {string} source - The source code to add the comment to.\r\n     * @param {string} url - The url for the comment.\r\n     * @param {boolean} [multiline] - Optional. Specifies how the comment is generated, `true` will create the comment\r\n     * using multiline syntax, otherwise it uses single line syntax. Defaults to `false`.\r\n     * @returns {string|null} The modified source if successful, otherwise `null`.\r\n     */\r\n    static setComment( source, url, multiline = false ) {\r\n        if ( isString( source ) && isString( url, true ) ) {\r\n            const sourceMappingURL = `# sourceMappingURL=${ url }`;\r\n            const comment = multiline ? `/*${ sourceMappingURL } */` : `//${ sourceMappingURL }`;\r\n            const stripped = source.replaceAll( this.COMMENT_MULTILINE, \"\" ).replaceAll( this.COMMENT_SINGLE, \"\" );\r\n            return stripped + \"\\n\" + comment;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    //endregion\r\n\r\n    /**\r\n     * Create a new instance of the class with the given source map like object.\r\n     *\r\n     * @param {SourceMapLike} sourceMap - A source map like object containing the properties to initialize the instance with.\r\n     * @throws {TypeError} - If the sourceMap does not contain at the very least a \"version\", \"sources\", \"names\" and \"mappings\" properties.\r\n     */\r\n    constructor( sourceMap ) {\r\n        if ( !isSourceMapLike( sourceMap ) ) {\r\n            throw new TypeError( \"The given 'sourceMap' is not a source map like object.\" );\r\n        }\r\n\r\n        this.sources = sourceMap.sources;\r\n        this.names = sourceMap.names;\r\n        this.mappings = sourceMap.mappings;\r\n\r\n        if ( isString( sourceMap.file, true ) ) {\r\n            this.file = sourceMap.file;\r\n        }\r\n        if ( isString( sourceMap.sourceRoot, true ) ) {\r\n            this.sourceRoot = sourceMap.sourceRoot;\r\n        }\r\n        if ( isArray( sourceMap.sourcesContent, true, item => isString( item, true ) ) ) {\r\n            this.sourcesContent = sourceMap.sourcesContent;\r\n        }\r\n        if ( isArray( sourceMap.x_google_ignoreList, true, item => typeof item === \"number\" ) ) {\r\n            this.x_google_ignoreList = sourceMap.x_google_ignoreList;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The version field which must always be the number `3` as an integer. The source map may be rejected in case of a\r\n     * value different from `3`.\r\n     *\r\n     * @type {number}\r\n     */\r\n    version = 3;\r\n\r\n    /**\r\n     * An optional name of the generated code that this source map is associated with. It’s not specified if this can be\r\n     * a URL, relative path name, or just a base name. As such it has a mostly informal character.\r\n     *\r\n     * @type {string}\r\n     */\r\n    file = \"\";\r\n\r\n    /**\r\n     * An optional source root, useful for relocating source files on a server or removing repeated values in the\r\n     * \"sources\" field. This value is prepended to the individual entries in the \"sources\" field.\r\n     *\r\n     * @type {string|undefined}\r\n     */\r\n    sourceRoot;\r\n\r\n    /**\r\n     * A list of original sources used by the \"mappings\" field. Each entry is either a string that is a\r\n     * (potentially relative) URL or null if the source name is not known.\r\n     *\r\n     * @type {string[]}\r\n     */\r\n    sources = [];\r\n\r\n    /**\r\n     * An optional list of source content, useful when the original source can’t be hosted. The contents are listed in\r\n     * the same order as the \"sources\" field. `null` may be used if some original sources should be retrieved by name.\r\n     *\r\n     * @type {string[]|undefined}\r\n     */\r\n    sourcesContent;\r\n\r\n    /**\r\n     * A list of symbol names used by the mappings entry.\r\n     *\r\n     * @type {string[]}\r\n     */\r\n    names = [];\r\n\r\n    /**\r\n     * A string with the encoded mapping data.\r\n     *\r\n     * @type {string}\r\n     */\r\n    mappings = \"\";\r\n\r\n    /**\r\n     * Identifies third-party sources (such as framework code or bundler-generated code), allowing developers to avoid\r\n     * code that they don't want to see or step through, without having to configure this beforehand.\r\n     *\r\n     * The `x_google_ignoreList` field refers to the `sources` array, and lists the indices of all the known third-party\r\n     * sources in that source map. When parsing the source map, developer tools can use this to determine sections of\r\n     * the code that the browser loads and runs that could be automatically ignore-listed.\r\n     *\r\n     * @type {number[]|undefined}\r\n     * @see https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.mt2g20loc2ct Source Map Revision 3 Proposal\r\n     */\r\n    x_google_ignoreList;\r\n\r\n    /**\r\n     * Convert this instance to a JSON stringified object.\r\n     *\r\n     * @return {string}\r\n     */\r\n    toString() {\r\n        return JSON.stringify( this );\r\n    }\r\n\r\n    /**\r\n     * Convert this instance to a JSON data url containing the base64 encoded result of a call to `toString`.\r\n     *\r\n     * @return {string}\r\n     */\r\n    toUrl() {\r\n        return 'data:application/json;charset=utf-8;base64,' + btoa( this.toString() );\r\n    }\r\n}"],"names":["SourceMap","merge","oldMap","newMap","from","mergeSourceMap","sourceMap","isSourceMapLike","COMMENT_MULTILINE","COMMENT_SINGLE","setComment","source","url","multiline","arguments","length","undefined","isString","sourceMappingURL","comment","stripped","replaceAll","constructor","TypeError","sources","names","mappings","file","sourceRoot","isArray","sourcesContent","item","x_google_ignoreList","version","toString","JSON","stringify","toUrl","btoa"],"mappings":"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"}