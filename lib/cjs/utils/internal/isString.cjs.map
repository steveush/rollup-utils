{"version":3,"file":"isString.cjs","sources":["../../../../src/utils/internal/isString.js"],"sourcesContent":["import isNonNullable from \"./isNonNullable.js\";\r\n\r\n/**\r\n * Check if a value is a string and optionally if it is not empty.\r\n *\r\n * @param {any} value - The value to check.\r\n * @param {boolean} [notEmpty] Optional. If `true` the value is trimmed and the resulting length must not be zero. Defaults to `false`.\r\n * @return {asserts value is string} `true` if the value is a string and optionally if it is not empty, otherwise `false`.\r\n */\r\nconst isString = ( value, notEmpty = false ) => isNonNullable( value ) && typeof value === \"string\" && ( !notEmpty || ( notEmpty && value.trim().length > 0 ) );\r\n\r\nexport default isString;"],"names":["isString","value","notEmpty","arguments","length","undefined","isNonNullable","trim"],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,QAAQ,GAAG,UAAEC,KAAK,EAAA;AAAA,EAAA,IAAEC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,KAAK,CAAA;EAAA,OAAMG,aAAa,CAAEL,KAAM,CAAC,IAAI,OAAOA,KAAK,KAAK,QAAQ,KAAM,CAACC,QAAQ,IAAMA,QAAQ,IAAID,KAAK,CAACM,IAAI,EAAE,CAACH,MAAM,GAAG,CAAG,CAAE,CAAA;AAAA;;;;"}