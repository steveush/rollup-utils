{"version":3,"file":"isArray.cjs","sources":["../../../../src/utils/internal/isArray.js"],"sourcesContent":["import isFunction from \"./isFunction.js\";\r\n\r\n/**\r\n * Check if a value is an array and optionally not empty. If a callback is supplied it is used to validate every entry in the array.\r\n *\r\n * @param {any} value - The value to check.\r\n * @param {boolean} [notEmpty] - Optional. If `true` the array must not be empty. Defaults to `false`.\r\n * @param {( value: any, key: number, iter: array ) => boolean} [callback] - Optional. A callback to validate every entry in the array.\r\n * @returns {boolean} - `true` if the value is an array and optionally not empty, otherwise `false`.\r\n */\r\nconst isArray = ( value, notEmpty = false, callback ) => {\r\n    if ( Array.isArray( value ) && ( !notEmpty || ( notEmpty && value.length > 0 ) ) ) {\r\n        return isFunction( callback ) ? value.every( callback ) : true;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport default isArray;"],"names":["isArray","value","notEmpty","arguments","length","undefined","callback","Array","isFunction","every"],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,OAAO,GAAG,UAAEC,KAAK,EAAkC;AAAA,EAAA,IAAhCC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,KAAK,CAAA;EAAA,IAAEG,QAAQ,GAAAH,SAAA,CAAAC,MAAA,GAAAD,CAAAA,GAAAA,SAAA,MAAAE,SAAA,CAAA;AAC/C,EAAA,IAAKE,KAAK,CAACP,OAAO,CAAEC,KAAM,CAAC,KAAM,CAACC,QAAQ,IAAMA,QAAQ,IAAID,KAAK,CAACG,MAAM,GAAG,CAAG,CAAE,EAAG;AAC/E,IAAA,OAAOI,UAAU,CAAEF,QAAS,CAAC,GAAGL,KAAK,CAACQ,KAAK,CAAEH,QAAS,CAAC,GAAG,IAAI,CAAA;AAClE,GAAA;AACA,EAAA,OAAO,KAAK,CAAA;AAChB;;;;"}