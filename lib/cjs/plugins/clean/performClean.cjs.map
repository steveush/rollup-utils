{"version":3,"file":"performClean.cjs","sources":["../../../../src/plugins/clean/performClean.js"],"sourcesContent":["import { rm } from \"fs/promises\";\r\nimport toShortTime from \"../../utils/internal/toShortTime.js\";\r\nimport isArray from \"../../utils/internal/isArray.js\";\r\nimport isString from \"../../utils/internal/isString.js\";\r\n\r\n/**\r\n * Performs the removal of the supplied paths.\r\n *\r\n * @param {import('rollup').PluginContext} ctx - The current Rollup plugin context.\r\n * @param {string[]} paths - The string array of paths to clean.\r\n * @returns {Promise<void>}\r\n * @remarks Additional information is output via the `ctx.debug`, `ctx.error` and `ctx.warn methods.\r\n */\r\nconst performClean = async( ctx, paths ) => {\r\n    if ( !isArray( paths, true, path => isString( path, true ) ) ) {\r\n        ctx.warn( 'No paths cleaned as the \"paths\" array was empty or contained values other than strings.' );\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const dirs = paths.join( \", \" );\r\n        const started = Date.now();\r\n        ctx.debug( `cleaning ${ dirs }...` );\r\n\r\n        await Promise.all( paths.map( path => rm( path, { recursive: true, force: true }) ) );\r\n        ctx.debug( `cleaned ${ dirs } in ${ toShortTime( Date.now() - started ) }` );\r\n    } catch ( err ) {\r\n        ctx.error( `clean error: ${ err.message }` );\r\n    }\r\n};\r\n\r\nexport default performClean;"],"names":["performClean","ctx","paths","isArray","path","isString","warn","dirs","join","started","Date","now","debug","Promise","all","map","rm","recursive","force","toShortTime","err","error","message"],"mappings":";;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,YAAY,GAAG,OAAOC,GAAG,EAAEC,KAAK,KAAM;AACxC,EAAA,IAAK,CAACC,OAAO,CAAED,KAAK,EAAE,IAAI,EAAEE,IAAI,IAAIC,QAAQ,CAAED,IAAI,EAAE,IAAK,CAAE,CAAC,EAAG;AAC3DH,IAAAA,GAAG,CAACK,IAAI,CAAE,yFAA0F,CAAC,CAAA;AACrG,IAAA,OAAA;AACJ,GAAA;EAEA,IAAI;AACA,IAAA,MAAMC,IAAI,GAAGL,KAAK,CAACM,IAAI,CAAE,IAAK,CAAC,CAAA;AAC/B,IAAA,MAAMC,OAAO,GAAGC,IAAI,CAACC,GAAG,EAAE,CAAA;AAC1BV,IAAAA,GAAG,CAACW,KAAK,CAAG,CAAYL,SAAAA,EAAAA,IAAM,KAAK,CAAC,CAAA;AAEpC,IAAA,MAAMM,OAAO,CAACC,GAAG,CAAEZ,KAAK,CAACa,GAAG,CAAEX,IAAI,IAAIY,WAAE,CAAEZ,IAAI,EAAE;AAAEa,MAAAA,SAAS,EAAE,IAAI;AAAEC,MAAAA,KAAK,EAAE,IAAA;KAAM,CAAE,CAAE,CAAC,CAAA;AACrFjB,IAAAA,GAAG,CAACW,KAAK,CAAG,CAAWL,QAAAA,EAAAA,IAAM,OAAOY,WAAW,CAAET,IAAI,CAACC,GAAG,EAAE,GAAGF,OAAQ,CAAG,EAAE,CAAC,CAAA;GAC/E,CAAC,OAAQW,GAAG,EAAG;IACZnB,GAAG,CAACoB,KAAK,CAAG,CAAA,aAAA,EAAgBD,GAAG,CAACE,OAAS,EAAE,CAAC,CAAA;AAChD,GAAA;AACJ;;;;"}